import{s as a,Z as g}from"./index-CTm8NVWJ.js";async function b(){const{data:e,error:o}=await a.from("cabins").select("*");if(o)throw console.log(o),new Error("Cabins couldn't be loaded");return e}async function f(e,o){if(typeof e.image=="string"){const{data:n,error:r}=await a.from("cabins").update(e).eq("id",o).select();if(r)throw console.log(r),new Error("Cabin couldn't be updated");return n}else{const{data:n}=await a.from("cabins").select("image").eq("id",o).single(),r=`${Math.random()}-${e.image.name}`.replaceAll("/","").replaceAll("\\",""),s=`${g}/storage/v1/object/public/cabin-images/${r}`,{error:t}=await a.storage.from("cabin-images").upload(r,e.image);if(t)throw console.log(t),new Error("Coudln't update the cabin. Try again");const{data:c,error:l}=await a.from("cabins").update({...e,image:s}).eq("id",o).select();if(l)throw console.log(l),await a.storage.from("cabin-images").remove([r]),new Error("Coudln't update the cabin. Try again");const m=n.image.split("/").at(-1);return await a.storage.from("cabin-images").remove([m]),c}}async function w(e,o=!1){const i=o?e.image.split("/").at(-1):`${Math.random()}-${e.image.name}`.replaceAll("/","").replaceAll("\\",""),n=`${g}/storage/v1/object/public/cabin-images/${o?`copy-${i}`:i}`,{data:r,error:s}=await a.from("cabins").insert([{...e,image:n}]).select().single();if(s)throw console.log(s),new Error("Cabins couldn't be created");if(o){if(o){const{error:t}=await a.storage.from("cabin-images").copy(i,`copy-${i}`);if(t)throw await a.from("cabins").delete().eq("id",r.id),console.log(t),new Error("Cabin image coudn't be copied and the cabin was not created")}}else{const{error:t}=await a.storage.from("cabin-images").upload(i,e.image);if(t)throw await a.from("cabins").delete().eq("id",r.id),console.log(t),new Error("Cabin image coudn't be uploaded and the cabin was not created")}return r}async function u(e){const{data:o,error:i}=await a.from("cabins").select("*").eq("id",e);if(i)throw console.log(i),new Error("Cabin couldn't be deleted. Try again");const n=o[0].image.split("/").at(-1),{data:r,error:s}=await a.storage.from("cabin-images").download(n);if(s)throw console.log(s),new Error("Cabin couldn't be deleted. Try again");const{error:t}=await a.storage.from("cabin-images").remove([n]),{error:c}=await a.from("cabins").delete().eq("id",e);if(c||t)throw t&&(await a.storage.from("cabin-images").upload(n,r),console.log(t)),c&&(await a.from("cabins").insert([o]),console.log(c)),new Error("Cabin couldn't be deleted. Try again")}export{w as c,u as d,f as e,b as g};
